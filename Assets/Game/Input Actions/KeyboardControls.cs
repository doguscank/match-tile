//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Game/Input Actions/KeyboardControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyboardControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyboardControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyboardControls"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""cc5b18c0-ec84-4577-9d5e-bb05f5b6d2f2"",
            ""actions"": [
                {
                    ""name"": ""IncreaseTileType"",
                    ""type"": ""PassThrough"",
                    ""id"": ""55129892-56bc-4f62-95b9-775e071cc37e"",
                    ""expectedControlType"": ""Key"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseTileType"",
                    ""type"": ""Button"",
                    ""id"": ""e7bbb8f9-aa7c-468d-a61a-cccf3763a3a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IncreaseLayer"",
                    ""type"": ""Button"",
                    ""id"": ""bded19ba-5641-4a9c-9dd0-1f84c6ab93b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseLayer"",
                    ""type"": ""Button"",
                    ""id"": ""e612cda1-8720-415d-aafe-f0ae37aef02c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1b4caf36-28ea-469e-9fab-7d344ff01515"",
                    ""path"": ""<Keyboard>/#(0)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IncreaseTileType"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5523a06b-fcd2-4a55-a15d-2dd0ae5eed85"",
                    ""path"": ""<Keyboard>/#(9)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DecreaseTileType"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""050391ab-54e5-4d83-839f-91c2f36cbb01"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IncreaseLayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ecea450-9b55-49e8-93e3-f5ab241d1149"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DecreaseLayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_IncreaseTileType = m_Keyboard.FindAction("IncreaseTileType", throwIfNotFound: true);
        m_Keyboard_DecreaseTileType = m_Keyboard.FindAction("DecreaseTileType", throwIfNotFound: true);
        m_Keyboard_IncreaseLayer = m_Keyboard.FindAction("IncreaseLayer", throwIfNotFound: true);
        m_Keyboard_DecreaseLayer = m_Keyboard.FindAction("DecreaseLayer", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_IncreaseTileType;
    private readonly InputAction m_Keyboard_DecreaseTileType;
    private readonly InputAction m_Keyboard_IncreaseLayer;
    private readonly InputAction m_Keyboard_DecreaseLayer;
    public struct KeyboardActions
    {
        private @KeyboardControls m_Wrapper;
        public KeyboardActions(@KeyboardControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @IncreaseTileType => m_Wrapper.m_Keyboard_IncreaseTileType;
        public InputAction @DecreaseTileType => m_Wrapper.m_Keyboard_DecreaseTileType;
        public InputAction @IncreaseLayer => m_Wrapper.m_Keyboard_IncreaseLayer;
        public InputAction @DecreaseLayer => m_Wrapper.m_Keyboard_DecreaseLayer;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @IncreaseTileType.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseTileType;
                @IncreaseTileType.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseTileType;
                @IncreaseTileType.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseTileType;
                @DecreaseTileType.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseTileType;
                @DecreaseTileType.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseTileType;
                @DecreaseTileType.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseTileType;
                @IncreaseLayer.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseLayer;
                @IncreaseLayer.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseLayer;
                @IncreaseLayer.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnIncreaseLayer;
                @DecreaseLayer.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseLayer;
                @DecreaseLayer.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseLayer;
                @DecreaseLayer.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDecreaseLayer;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @IncreaseTileType.started += instance.OnIncreaseTileType;
                @IncreaseTileType.performed += instance.OnIncreaseTileType;
                @IncreaseTileType.canceled += instance.OnIncreaseTileType;
                @DecreaseTileType.started += instance.OnDecreaseTileType;
                @DecreaseTileType.performed += instance.OnDecreaseTileType;
                @DecreaseTileType.canceled += instance.OnDecreaseTileType;
                @IncreaseLayer.started += instance.OnIncreaseLayer;
                @IncreaseLayer.performed += instance.OnIncreaseLayer;
                @IncreaseLayer.canceled += instance.OnIncreaseLayer;
                @DecreaseLayer.started += instance.OnDecreaseLayer;
                @DecreaseLayer.performed += instance.OnDecreaseLayer;
                @DecreaseLayer.canceled += instance.OnDecreaseLayer;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void OnIncreaseTileType(InputAction.CallbackContext context);
        void OnDecreaseTileType(InputAction.CallbackContext context);
        void OnIncreaseLayer(InputAction.CallbackContext context);
        void OnDecreaseLayer(InputAction.CallbackContext context);
    }
}
